<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="../styles/coursehome.css">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.3.1/css/all.css" integrity="sha384-mzrmE5qonljUremFsqc01SB46JvROS7bZs3IO2EmfFsd15uHvIt+Y8vEf7N7fWAU" crossorigin="anonymous">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <title>Document</title>
</head>

<body>
    <table class="table" id="dataTable" style="display: none;">
        <thead>
            <th>CourseID</th>
            <th>Avg_rating</th>
        </thead>
        <tbody>
            <% courserating.forEach(function(course) {%>

                <tr>
                    <td>
                        <%= course.course_id %>
                    </td>
                    <td>
                        <%= course.avg_rating %>
                    </td>

                </tr>
                <% }); %>
        </tbody>
    </table>


    <div class="chart">
        <canvas id="myChart"></canvas>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.css" />
    <script type="text/javascript">
        function BuildChart(labels, values, chartTitle) {
            var ctx = document.getElementById("myChart").getContext('2d');
            var myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels, // Our labels
                    datasets: [{
                        label: chartTitle, // Name the series
                        data: values, // Our values
                        backgroundColor: [ // Specify custom colors
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [ // Add custom color borders
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1 // Specify bar border width
                    }]
                },
                options: {
                    responsive: true, // Instruct chart js to respond nicely.
                    maintainAspectRatio: false, // Add to prevent default behaviour of full-width/height 
                }
            });
            return myChart;
        }


        // HTML To JSON Script 
        // *Forked* from https://johndyer.name/html-table-to-json/
        var table = document.getElementById('dataTable');
        var json = []; // first row needs to be headers 
        var headers = [];
        for (var i = 0; i < table.rows[0].cells.length; i++) {
            headers[i] = table.rows[0].cells[i].innerHTML.toLowerCase().replace(/ /gi, '');
        }
        // go through cells 
        for (var i = 1; i < table.rows.length; i++) {
            var tableRow = table.rows[i];
            var rowData = {};
            for (var j = 0; j < tableRow.cells.length; j++) {
                rowData[headers[j]] = tableRow.cells[j].innerHTML;
            }
            json.push(rowData);
        }
        console.log(json);
        // Map json values back to label array
        var labels = json.map(function(e) {
            return e.courseid;
        });
        console.log(labels);
        // Map json values back to values array
        var values = json.map(function(e) {
            return e.avg_rating;
        });
        console.log(values);
        var chart = BuildChart(labels, values, "Items Sold Over Time");
    </script>
</body>

</html>